using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Ripple.Testing.Server
{
    public class ConfigWriter
    {
        private readonly StringBuilder _sb = new StringBuilder();

        public ConfigWriter()
        {
            _sb.AppendLine($"# rippled.cfg autogenerated @ {DateTime.Now}");
        }

        public ConfigWriter WriteList(string sectionName, IEnumerable<object> toStringAbles)
        {
            WriteSectionHeader(sectionName);
            toStringAbles.ToList().ForEach(WriteSectionValue);
            WriteNewLine();
            return this;
        }

        public ConfigWriter WriteList(string sectionName, params string[] strings)
        {
            return WriteList(sectionName, (IEnumerable<object>) strings);
        }

        public ConfigWriter WriteDict(string sectionName, IDictionary<string, object> toStringAbles)
        {
            return WriteList(
                sectionName, toStringAbles.Select(kv => $"{kv.Key}={kv.Value}"));
        }

        public ConfigWriter WriteOne(string sectionName, string val)
        {
            return WriteList(sectionName, val);
        }

        private void WriteSectionValue(object val)
        {
            _sb.AppendLine(val.ToString());
        }

        private void WriteNewLine()
        {
            _sb.AppendLine();
        }

        private void WriteSectionHeader(string sectionName)
        {
            _sb.AppendLine($"[{sectionName}]");
        }

        public override string ToString()
        {
            return _sb.ToString();
        }
    }
}